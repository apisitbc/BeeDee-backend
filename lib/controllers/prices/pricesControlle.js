"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const quotes_1 = require("../../quotes");
class PricesController {
    constructor(pricesService) {
        this.pricesService = pricesService;
    }
    async save(req, res) {
        try {
            const response = await this.pricesService.save(quotes_1.quotes);
            res.send(response);
        }
        catch (err) {
            res.status(500).json({ error: "Internal Server Error" });
        }
    }
    async list(req, res) {
        try {
            const prices = await this.pricesService.list();
            res.json(prices);
        }
        catch (error) {
            console.error("Error retrieving prices:", error);
            res.status(500).json({ error: "Internal server error" });
        }
    }
    async averagePrices(req, res) {
        try {
            const averagePrices = await this.pricesService.averagePrices();
            res.json(averagePrices);
        }
        catch (error) {
            console.error("Error calculating average prices:", error);
            res.status(500).json({ error: "Internal server error" });
        }
    }
}
exports.PricesController = PricesController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpY2VzQ29udHJvbGxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbnRyb2xsZXJzL3ByaWNlcy9wcmljZXNDb250cm9sbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5Q0FBc0M7QUFJdEMsTUFBYSxnQkFBZ0I7SUFDekIsWUFBb0IsYUFBNEI7UUFBNUIsa0JBQWEsR0FBYixhQUFhLENBQWU7SUFBRyxDQUFDO0lBRXBELEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBWSxFQUFFLEdBQWE7UUFDbEMsSUFBSTtZQUNBLE1BQU0sUUFBUSxHQUFHLE1BQU0sSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsZUFBTSxDQUFDLENBQUM7WUFFdkQsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUN0QjtRQUFDLE9BQU8sR0FBRyxFQUFFO1lBQ1YsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLEVBQUUsdUJBQXVCLEVBQUUsQ0FBQyxDQUFDO1NBQzVEO0lBQ0wsQ0FBQztJQUVELEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBWSxFQUFFLEdBQWE7UUFDbEMsSUFBSTtZQUNBLE1BQU0sTUFBTSxHQUFHLE1BQU0sSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUMvQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3BCO1FBQUMsT0FBTyxLQUFLLEVBQUU7WUFDWixPQUFPLENBQUMsS0FBSyxDQUFDLDBCQUEwQixFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ2pELEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLHVCQUF1QixFQUFFLENBQUMsQ0FBQztTQUM1RDtJQUNMLENBQUM7SUFFRCxLQUFLLENBQUMsYUFBYSxDQUFDLEdBQVksRUFBRSxHQUFhO1FBQzNDLElBQUk7WUFDQSxNQUFNLGFBQWEsR0FBRyxNQUFNLElBQUksQ0FBQyxhQUFhLENBQUMsYUFBYSxFQUFFLENBQUM7WUFDL0QsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztTQUMzQjtRQUFDLE9BQU8sS0FBSyxFQUFFO1lBQ1osT0FBTyxDQUFDLEtBQUssQ0FBQyxtQ0FBbUMsRUFBRSxLQUFLLENBQUMsQ0FBQztZQUMxRCxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxDQUFDLENBQUM7U0FDNUQ7SUFDTCxDQUFDO0NBQ0o7QUFoQ0QsNENBZ0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcXVvdGVzIH0gZnJvbSBcIi4uLy4uL3F1b3Rlc1wiO1xuaW1wb3J0IHsgUHJpY2VzU2VydmljZSB9IGZyb20gXCJzcmMvc2VydmljZXMvcHJpY2VzL3ByaWNlcy5zZXJ2aWNlXCI7XG5pbXBvcnQgeyBSZXF1ZXN0LCBSZXNwb25zZSB9IGZyb20gXCJleHByZXNzXCI7XG5cbmV4cG9ydCBjbGFzcyBQcmljZXNDb250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHByaWNlc1NlcnZpY2U6IFByaWNlc1NlcnZpY2UpIHt9XG5cbiAgICBhc3luYyBzYXZlKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnByaWNlc1NlcnZpY2Uuc2F2ZShxdW90ZXMpO1xuXG4gICAgICAgICAgICByZXMuc2VuZChyZXNwb25zZSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogXCJJbnRlcm5hbCBTZXJ2ZXIgRXJyb3JcIiB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIGxpc3QocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBwcmljZXMgPSBhd2FpdCB0aGlzLnByaWNlc1NlcnZpY2UubGlzdCgpO1xuICAgICAgICAgICAgcmVzLmpzb24ocHJpY2VzKTsgXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgcmV0cmlldmluZyBwcmljZXM6XCIsIGVycm9yKTtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IFwiSW50ZXJuYWwgc2VydmVyIGVycm9yXCIgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhc3luYyBhdmVyYWdlUHJpY2VzKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgYXZlcmFnZVByaWNlcyA9IGF3YWl0IHRoaXMucHJpY2VzU2VydmljZS5hdmVyYWdlUHJpY2VzKCk7XG4gICAgICAgICAgICByZXMuanNvbihhdmVyYWdlUHJpY2VzKTsgXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgY2FsY3VsYXRpbmcgYXZlcmFnZSBwcmljZXM6XCIsIGVycm9yKTtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IFwiSW50ZXJuYWwgc2VydmVyIGVycm9yXCIgfSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=